<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/2002/xmlspec/dtd/2.10/xmlspec.dtd">

<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出 -->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数 -->
<configuration status="WARN" monitorInterval="30">
	<!--先定义所有的appender -->
	<appenders>
		<!-- 优先级从高到低分别是 OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL -->
        <!-- 单词解释： Match：匹配 DENY：拒绝 Mismatch：不匹配 ACCEPT：接受 -->
        <!-- DENY，日志将立即被抛弃不再经过其他过滤器； NEUTRAL，有序列表里的下个过滤器过接着处理日志； ACCEPT，日志会被立即处理，不再经过剩余过滤器。 -->
        <!--输出日志的格式
         %d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间
         %p : 日志输出格式
         %c : logger的名称 
         %m : 日志内容，即 logger.info("message") 
         %n : 换行符 
         %C : Java类名
         %L : 日志输出所在行数 
         %M : 日志输出所在方法名 
         hostName : 本地机器名 
         hostAddress : 本地ip地址 -->
		
		<!--这个输出控制台的配置 -->
		<console name="Console_OUT" target="SYSTEM_OUT" immediateFlush="true">
			<!-- 控制台只输出level及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) -->
            <ThresholdFilter level="all" onMatch="ACCEPT" onMismatch="DENY"/>
			<!--输出日志的格式 -->
			<PatternLayout charset="UTF-8" pattern="[%-5p] %d(%r) --> [%t] %l: %m %x %n" />
		</console>
		<console name="Console_ERR" target="SYSTEM_ERR" immediateFlush="true" >
			<!-- 控制台只输出level及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) -->
            <ThresholdFilter level="WARN" onMatch="ACCEPT" onMismatch="DENY"/>
			<!--输出日志的格式 -->
			<PatternLayout charset="UTF-8" pattern="[%-5p] %d(%r) --> [%t] %l: %m %x %n" />
		</console>

		<!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用 -->
		<File name="RunTimelog" fileName="${sys:user.home}/log/park/test/RunTimeLog.log" append="false" immediateFlush="false">	
			<!-- 控制台只输出level及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) -->
            <ThresholdFilter level="all" onMatch="ACCEPT" onMismatch="DENY"/>
			<PatternLayout charset="UTF-8"
				pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n" />
		</File>

		<!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<!-- <RollingFile name="RollingFileInfo" fileName="${sys:user.home}/logs/info.log"
			filePattern="${sys:user.home}/logs/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log">
			控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）
			<ThresholdFilter level="info" onMatch="ACCEPT"
				onMismatch="DENY" />
			<PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
		</RollingFile> -->
		
	</appenders>
	
	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
	<loggers>
		<root level="all">
			<appender-ref ref="RunTimelog" />
			<appender-ref ref="Console_OUT" />
			<appender-ref ref="Console_ERR" />
		</root>
		<!--过滤掉spring和mybatis的一些无用的DEBUG信息 -->
		<!-- 其他属性继承root 的属性 -->
		<!-- name:用来指定该Logger所适用的类或者类所在的包全路径，空默认继承自root -->
	<!-- <logger name="org.springframework" level="INFO"/> <logger name="org.mybatis" 
		level="INFO"/> -->
	</loggers>
</configuration>