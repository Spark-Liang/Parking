<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--客户映射 指定到dao接口 -->
<mapper namespace="com.park.ssm.dao.ParkingLotDao">



<resultMap type="ParkingLot" id="parkingLotRoughResult">
	<id property="id" column="id" />
	<result property="name" column="name" />
	<result property="location" column="location" />
	<result property="cost" column="cost" />
	<result property="state" column="state" typeHandler="com.park.ssm.entity.type.ParkingLotStateHandler"/>
	<collection property="parkingPositions" column="id" fetchType="lazy" javaType="java.util.HashSet" ofType="ParkingPosition" 
		select="com.park.ssm.dao.ParkingPositiontDao.loadParkingPositionByLotId"/>
</resultMap>

<select id="loadParkingLotById" parameterType="int" resultMap="parkingLotRoughResult">
	select 
		Id,name,location,cost,state
	from ParkingLot
	where id=#{_parameter}
</select>
<select id="loadParkingLotByIdForUpdate" parameterType="int" resultMap="parkingLotRoughResult">
	select 
		Id,name,location,cost,state
	from ParkingLot
	where id=#{_parameter}
	for update
</select>

<select id="listParkingLot"  resultMap="parkingLotRoughResult">
	select 
		Id,name,location,cost
	from ParkingLot
	<where>
		<if test="example.id!=null">
			and id=#{example.id}
		</if>
		<if test="example.name!=null and !&quot;&quot;.equals(example.name.trim())">
			and name like '%'#{example.name.trim()}'%'
		</if>
		<if test="example.location!=null and !&quot;&quot;.equals(example.location.trim())">
			and location like '%'#{example.location.trim()}'%'
		</if>
		<if test="cost_gt != null">
			and cost &gt; cost_gt
		</if>
		<if test="cost_lt != null">
			and cost &lt; cost_lt
		</if>
		and state in
			<foreach collection="states" open="(" close=")" separator="," item="state">
				#{state.getInd()}
			</foreach>
	</where>
	<if test="pageNum != null and pageSize != null">
		limit (#{(pageNum-1)*pageSize },#{pageSize})
	</if>
</select>


<insert id="insertParkingLot"  parameterType="ParkingLot" keyColumn="id" useGeneratedKeys="true">
	insert into ParkingLot(name,location,cost,state)
	values (#{name},#{location},#{cost},#{state})
</insert>
<insert id="listInsertParkingLot"  parameterType="List" keyColumn="id" useGeneratedKeys="true">
	insert into ParkingLot(name,location,cost,state)
	values 
	<trim suffixOverrides=",">
		<foreach collection="list" item="tmp">
			(#{tmp.name},#{tmp.location},#{tmp.cost},#{tmp.state}),
		</foreach>
	</trim>
</insert>




<update id="updateParkingLot" parameterType="ParkingLot" >
	update 
		<set>
			<if test="name!=null and !&quot;&quot;.equals(name.trim())">
				name=#{name},
			</if>
			<if test="location!=null and !&quot;&quot;.equals(location.trim())">
				location=#{location},
			</if>
			<if test="cost != null">
				cost=#{cost},
			</if>
			<if test="state != null">
				state=#{state.getInd()},
			</if>
		</set>
	where id=#{id}
</update>

<update id="deleteParkingLot" parameterType="int" >
	update ParkingLot 
		set state=-1
	where id=#{_parameter}
</update>
<update id="listDeleteParkingLot" parameterType="List" >
	update ParkingLot 
		set state=-1
	where id in
	<foreach collection="list" open="(" close=")" separator=",">
		#{_parameter}
	</foreach>
</update>


</mapper>