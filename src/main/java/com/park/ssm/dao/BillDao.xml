<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--客户映射 指定到dao接口 -->
<mapper namespace="com.park.ssm.dao.BillDao">
	<resultMap type="bill" id="billResultMap">
		<id property="id" column="userId"></id>
		<result property="billStartDate" column="billStartDate"></result>
		<result property="billEndDate" column="billStartDate"></result>
		<result property="price" column="price"></result>
		<result property="isPaid" column="isPaid"></result>
		<association property="user" javaType="User">
			<id property="id" column="userId"/>
		</association>
		<association property="parkingLot" javaType="ParkingLot">
			<id property="id" column="parkingLotId"/>
		</association>
		<association property="account" javaType="Account">
			<id property="id" column="accountId"/>
		</association>
	</resultMap>

	<sql id="sqlField">
		id,userId,parkingLotId,accountId,price,billStartDate,billEndDate,isPaid
	</sql>

	<!-- 通过id加载账单 -->
	<select id="loadBillById" parameterType="Long" resultType="Bill">
		select
		<include refid="sqlField" />
		from Bill
		where id=#{_parameter}
	</select>
	<select id="loadBillByIdForUpdate" parameterType="Long"
		resultType="Bill">
		select
		<include refid="sqlField" />
		from Bill
		where id=#{_parameter}
		for update
	</select>

	<!-- 通过各種id組合加载账单 -->
	<select id="listBillById" resultType="Bill">
		select
		<include refid="sqlField" />
		from Bill
		<where>
			<if test="userId != null">
				and userId=#{userId}
			</if>
			<if test="accountId != null">
				and accountId=#{accountId}
			</if>
			<if test="parkingLotId != null">
				and parkingLotId=#{parkingLotId}
			</if>
		</where>
		<if test="pageNum != null and pageSize != null">
			limit ${(pageNum-1)*pageSize},#{pageSize}
		</if>
	</select>
	<select id="countBillById" parameterType="Long" resultType="Integer">
		select
		count(1)
		from Bill
		<where>
			<if test="userId != null">
				and user=#{userId}
			</if>
			<if test="accountId != null">
				and accountId=#{accountId}
			</if>
			<if test="parkingLotId != null">
				and parkingLotId=#{parkingLotId}
			</if>
		</where>
	</select>

	<update id="updateBillStateById">
		update Bill
		set isPaid=1
		where id=#{_parameter}
	</update>

	<select id="isNotPayBill" parameterType="Long" resultType="Integer">
		select count(id) from Bill
		<where>
			<if test="userId != null">
				and userId=#{userId}
			</if>
		</where>
		and isPaid=0
		for update
	</select>
	<select id="listBillByUserId" resultMap="billResultMap">
		select b.userId,a.cardId,p.name,b.billStartDate,b.billEndDate,b.price,b.isPaid
		from Account a,ParkingLot p,Bill b
		<where> a.userId=b.userId
			and b.parkingLotId=p.id
			and b.userId=#{userId}
		</where>
	</select>

</mapper>