<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--客户映射 指定到dao接口 -->
<mapper namespace="com.park.ssm.dao.BillDao">
	<!-- <resultMap type="bill" id="billResultMap"> <id property="id" column="userId"></id> 
		<result property="billStartDate" column="billStartDate"></result> <result 
		property="billEndDate" column="billStartDate"></result> <result property="price" 
		column="price"></result> <result property="isPaid" column="isPaid"></result> 
		<association property="user" javaType="User"> <id property="id" column="userId"/> 
		</association> <association property="parkingLot" javaType="ParkingLot"> 
		<id property="id" column="parkingLotId"/> </association> <association property="account" 
		javaType="Account"> <id property="id" column="accountId"/> </association> 
		</resultMap> -->
	<sql id="sqlField">
		id,userId,parkingLotId,accountId,price,isPaid
	</sql>
	<resultMap type="bill" id="billResultMap">
		<id property="id" column="id"/>

		<result property="userId" column="userId" />
		<result property="parkingLotId" column="parkingLotId" />
		<result property="accountId" column="accountId" />

		<result property="price" column="price" />
		<result property="isPaid" column="isPaid" />
		<result property="lastPayDate" column="lastPayDate" />

		<collection property="timeQuantums" javaType="List" ofType="TimeQuantum">
			<result property="startTime" column="startTime" />
			<result property="endTime" column="endTime" />
		</collection>
	</resultMap>

	<sql id="billField">
		userId,parkingLotId,accountId
		,price,isPaid,lastPayDate
	</sql>
	<sql id="timeQuantumField">
		startTime,endTime
	</sql>

	<!-- 通过id加载账单 -->
	<select id="loadBillById" parameterType="Long" resultMap="billResultMap">
		select
			a.id
			,<include refid="billField" />
			,<include refid="timeQuantumField" />
		from 
			(select
				id,<include refid="billField" />
			from Bill where id=#{_parameter})a
			inner join 
			(select 
				billId,<include refid="timeQuantumField"/>
			from AccountStateLog )b
			on a.id=b.billId
	</select>
	<select id="loadBillByIdForUpdate" parameterType="Long"
		resultType="Bill">
		select
			id,<include refid="billField" />
		from Bill
		where id=#{_parameter}
		for update
	</select>

	<!-- 通过各種id組合加载账单 -->
	<select id="listBillById" resultMap="billResultMap">
		select
			a.id
			,<include refid="billField" />
			,<include refid="timeQuantumField" />
		from
			(select
				id,<include refid="billField" />
			from Bill
			<where>
				<if test="userId != null">
					and userId=#{userId}
				</if>
				<if test="accountId != null">
					and accountId=#{accountId}
				</if>
				<if test="parkingLotId != null">
					and parkingLotId=#{parkingLotId}
				</if>
			</where>
			<if test="pageNum != null and pageSize != null">
				limit ${(pageNum-1)*pageSize},#{pageSize}
			</if>
			)a
			inner join
			(select 
				billId,<include refid="timeQuantumField"/>
			from AccountStateLog )b
			on a.id=b.billId
	</select>
	<select id="countBillById" parameterType="Long" resultType="Integer">
		select
		count(1)
		from Bill
		<where>
			<if test="userId != null">
				and user=#{userId}
			</if>
			<if test="accountId != null">
				and accountId=#{accountId}
			</if>
			<if test="parkingLotId != null">
				and parkingLotId=#{parkingLotId}
			</if>
		</where>
	</select>

	<select id="isNotPayBill" parameterType="Long" resultType="Integer">
		select count(id) from Bill
		<where>
			<if test="userId != null">
				and userId=#{userId}
			</if>
			<if test="parkingLotId != null">
				and parkingLotId=#{parkingLotId}
			</if>
		</where>
		and isPaid=0
	</select>

	<insert id="addBill" parameterType="com.park.ssm.entity.Bill">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
			<!-- SELECT LAST_INSERT_ID()：获取刚insert到数据表中的记录的键值，只适用于自增键字段 -->
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into
		Bill(userId,parkingLotId,accountId,price,isPaid)
		values(#{userId},#{parkingLotId},#{accountId},#{price},#{isPaid})
	</insert>
	<update id="updateIsPaid">
		update Bill set isPaid=true
		where id=#{id}
	</update>
	
	
	<select id="generateBill" statementType="CALLABLE" useCache="false">
		<![CDATA[{
			call generateBill(
			 #{date}
			,#{flag,mode=OUT,jdbcType=INTEGER,javaType=Integer}
			)
		}]]>
	</select>
</mapper>