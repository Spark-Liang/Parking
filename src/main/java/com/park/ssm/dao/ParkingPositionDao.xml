<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--客户映射 指定到dao接口 -->
<mapper namespace="com.park.ssm.dao.ParkingPositionDao">


<resultMap type="ParkingPosition" id="parkingPositionRoughResult">
	<id property="id" column="id"/>
	<result property="state" column="state"  typeHandler="com.park.ssm.entity.type.ParkingPositionStateHandler"/>
	<result property="parkingLotId" column="parkingLotId" />
	<result property="accountId" column="accountId" />
</resultMap>



<!-- 加载的ParkingPosition中所有的bean属性为代理对象 -->
<select id="loadParkingPositionByLotId" parameterType="int" resultMap="parkingPositionRoughResult">
	select 
		id,state,parkingLotId,accountId
	from ParkingPosition
	where parkingLotId=#{_parameter}
</select>


<select id="loadParkingPositionById"  parameterType="long" resultMap="parkingPositionRoughResult" >
	select * from ParkingPosition	
	where id=#{_parameter}
</select>
<select id="loadParkingPositionByIdForUpdate" parameterType="long"  resultMap="parkingPositionRoughResult">
	select * from ParkingPosition	
	where id=#{_parameter}
	for update
</select>


<!-- 复杂查询条件 -->
<sql id="condition" >
	<where>
		<!-- price部分 -->
		<if test="map.id != null">
			and id=#{map.id}
		</if>
		<if test="map.parkingLotId != null">
			and id=#{map.parkingLotId}
		</if>
		<if test="map.accountId != null">
			and id=#{map.accountId}
		</if>
		<!-- state部分 -->
		<if test="map.states != null">
			and state in
			<foreach collection="map.states" open="(" close=")" separator="," item="state">
				${state.getInd()}
			</foreach>
		</if>
	</where>
</sql>
<!-- 返回的parkingLot中的所有对象的所有的bean属性都不进行加载，只是生成代理类 -->
<select id="listParkingPosition"  resultMap="parkingPositionRoughResult">
	select 
		*
	from ParkingPosition
	<if test="map != null and !map.isEmpty()">
		<include refid="condition"/>
	</if>
	<if test="pageNum != null and pageSize != null">
		limit ${(pageNum-1)*pageSize},#{pageSize}
	</if>
</select>


<insert id="insertParkingPosition" parameterType="List" >
insert into ParkingPosition(parkingLotId) values
<foreach collection="list" item="parkingLotId" separator=",">(#{parkingLotId})</foreach>
</insert>

<update id="updateParkingPosition" parameterType="int">
update ParkingPosition
	<set>
		<if test="parkingposition.parkingLotId != null">
			set parkingLotId=#{parkingposition.parkingLotId},
		</if>
		<if test="parkingposition.accountId != null">
			set accountId=#{parkingposition.accountId},
		</if>
		<if test="parkingposition.state != null">
			set state=${parkingposition.state.getInd()},
		</if>
	</set>
where id=#{id}
</update>

<update id="updateParkingPositionByLotId" parameterType="int">
update ParkingPosition
	<set>
		<if test="parkingposition.accountId != null">
		 accountId=#{parkingposition.accountId}
		</if>
	</set>
where parkingLotId=#{parkingLotId}
</update>



 
<update id="deleteParkingPositionByLotId" parameterType="int">
update ParkingPosition
	set state= -1 <!-- ${ParkingPositionState.INACTIVE.getInd()} -->
where parkingLotId=#{_parameter}
</update>
 
<select id="getPositionNum"  resultType="Integer">
    select count(id) from ParkingPosition where parkingLotId=#{parkingLotId} 
      and accountId is null
      for update
</select>

<select id="getPositionNumByUser" resultType="Integer">
    select count(id) from ParkingPosition 
    where parkingLotId=#{parkingLotId} and accountId=#{accountId}
     for update
</select>

</mapper>