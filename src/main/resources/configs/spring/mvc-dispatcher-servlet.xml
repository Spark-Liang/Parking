<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
       xmlns:context="http://www.springframework.org/schema/context"  
       xmlns:mvc="http://www.springframework.org/schema/mvc"  
         xmlns:task="http://www.springframework.org/schema/task" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/task
                        http://www.springframework.org/schema/task/spring-task-3.0.xsd
                        ">  
    
    
    <!-- 自动扫描  @Controller-->  
    <context:component-scan base-package="com.park.ssm.controller">
    	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>  
  	<!--激活spring的注解支持-->
    <context:annotation-config/>
  
  	<!--激活基于annotation的handlerMapping-->
    <mvc:annotation-driven/>

	<mvc:resources location="/js/" mapping="js/**"/>
	<mvc:resources location="/css/" mapping="css/**"/>
	<mvc:resources location="/img/" mapping="img/**"/>

	<!-- 拦截器配置 -->
    <mvc:interceptors>
    	<mvc:interceptor>
    		<mvc:mapping path="/**"/>
    		<mvc:exclude-mapping path="/index.jsp"/>
    		<!-- <mvc:exclude-mapping path="/error/**"/> -->
    		<bean class="com.park.ssm.interceptor.LoginInterceptor"/>
    	</mvc:interceptor>
    </mvc:interceptors>
    
    
    
	<!-- 防sql注入攻击——拦截器配置 -->
    <mvc:interceptors>
    	<mvc:interceptor>
    		<mvc:mapping path="/**"/>
    		 <mvc:exclude-mapping path="/index.jsp"/>
    	   <bean class="com.park.ssm.interceptor.SqlInjectInterceptor"/>
    	</mvc:interceptor>
    </mvc:interceptors>


    <bean id="htmlInternalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.InternalResourceView"/>
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="10" />
    </bean>
    
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  
    <bean id="mappingJacksonHttpMessageConverter"  
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
            	<value>application/json;charset=UTF-8</value>
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>  
    
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter"/> <!-- JSON转换器 -->  
            </list>  
        </property>  
    </bean>  
  
  
    <!-- 文件上传配置 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="UTF-8"/>  
        <!-- 上传文件大小限制为31M，31*1024*1024 -->  
        <property name="maxUploadSize" value="32505856"/>  
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="4096"/>  
    </bean> 
    
     
    <!-- spring-quartz定时任务配置 -->
    <!-- 使用MethodInvokingJobDetailFactoryBean，任务类可以不实现Job接口，通过targetMethod指定调用方法-->
   <bean id="TaskJobA" class="com.park.ssm.task.TaskJobA"/>
     <bean id="jobDetail1" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject">
        <ref bean="TaskJobA"/>
    </property>
    <property name="targetMethod">
        <value>creatBill</value>
    </property>
   </bean>
    <bean id="TaskJobB" class="com.park.ssm.task.TaskJobB"/>
   <bean id="jobDetail2" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject">
        <ref bean="TaskJobB"/>
    </property>
    <property name="targetMethod">
        <value>autoStopCard</value>
    </property>
   </bean>
  
    <!--  调度触发器 -->
    <bean id="Trigger1"
      class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
    <property name="jobDetail">
        <ref bean="jobDetail1" />
    </property>
    <property name="cronExpression">
       <!--  <value>0/5 * * * * ?</value> -->
        <value>0 0 0 L 3,6,9,12 ?</value>
    </property>
    </bean>
    
     <!--  调度触发器 -->
    <bean id="Trigger2"
      class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
    <property name="jobDetail">
        <ref bean="jobDetail2" />
    </property>
    <property name="cronExpression">
       <!--  <value>0/5 * * * * ?</value> -->
         <value>0 0 0 1 1,4,7,10 ?</value>
    </property>
    </bean>

    <!-- 调度工厂 -->
    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    <property name="triggers">
        <list>
           <ref bean="Trigger1"/>
           <ref bean="Trigger2"/>
        </list>
    </property>
         </bean>
   
</beans>  